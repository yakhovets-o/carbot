#FROM python:3.11-slim as base
#
## Сборка зависимостей
#ARG BUILD_DEPS="curl"
#RUN apt-get update && apt-get install -y $BUILD_DEPS
#
## Установка poetry
#RUN curl -sSL https://install.python-poetry.org | python3 -
##ENV PATH="${PATH}:/root/poetry/bin"
#ENV PATH="${PATH}:/root/.cache/pypoetry/virtualenvs/bot-9TtSrW0h-py3.11/bin"
#
#
## Инициализация проекта
#WORKDIR /app
#
#ENV PYTHONDONTWRITEBYTECODE 1
#ENV PYTHONUNBUFFERED 1
#
## Установка питонячьих библиотек
#COPY poetry.lock pyproject.toml /
#
#RUN poetry lock
#RUN poetry install --no-interaction --no-ansi
#
#
#COPY . /app
#RUN poetry run arq --version
#CMD ["poetry", "run", "arq", "bot.scheduler.scheduler.WorkerSettings"]



FROM python:3.11-slim as base

# Сборка зависимостей
ARG BUILD_DEPS="curl"
RUN apt-get update && apt-get install -y $BUILD_DEPS

# Установка poetry
RUN curl -sSL https://install.python-poetry.org | python3 -
ENV PATH="${PATH}:/root/.local/bin"

# Инициализация проекта
WORKDIR /app

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Установка питонячьих библиотек
COPY poetry.lock pyproject.toml /

RUN poetry export -f requirements.txt --output requirements.txt
RUN pip install -r requirements.txt

COPY . /app
RUN arq --version
CMD ["arq", "bot.scheduler.scheduler.WorkerSettings"]

